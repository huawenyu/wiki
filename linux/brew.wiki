# Intro

Linuxbrew Homepage: http://linuxbrew.sh/.
It's feature set includes:

- Allowing installation of packages to a home directory without root access.
- Supports installing of third-party software (not packaged on the native distributions).
- Supports installing of up-to-date versions of packages when the one provided in the distro repositories is old.
- In addition, brew allows you to manage packages on both your Mac and Linux machines.

# Install Linuxbrew in Linux

To install Linuxbrew on your Linux distribution, fist you need to install following dependencies as shown.

    ###--------- On Debian/Ubuntu ---------
    $ sudo apt-get install build-essential curl file git

    ###--------- On Fedora 22+ ---------
    $ sudo dnf groupinstall 'Development Tools' && sudo dnf install curl file git

    ###--------- On CentOS/RHEL ---------
    $ sudo yum groupinstall 'Development Tools' && sudo yum install curl file git

Once the dependencies installed, you can use the following script to install Linuxbrew package
in /home/linuxbrew/.linuxbrew (or in your home directory at ~/.linuxbrew) as shown.

$ sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"

Next, you need to add the directories to your PATH

- /home/linuxbrew/.linuxbrew/bin - (or ~/.linuxbrew/bin)
- /home/linuxbrew/.linuxbrew/sbin (or ~/.linuxbrew/sbin)

And to your bash shell initialization script ~/.bashrc as shown:

    $ echo 'export PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin/:$PATH"' >>~/.bashrc
    $ echo 'export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"' >>~/.bashrc
    $ echo 'export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"' >>~/.bashrc

Then source the ~/.bashrc file for the recent changes to take effect.

    $ source  ~/.bashrc

## How to Uninstall Linuxbrew in Linux

    $ /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/uninstall)"

# Using Linuxbrew

For example you can install the gcc package (or formula) with the following command.
Take note of some of the messages in the output, there are some useful environmental variables that you need to set for some formulae to work correctly.

    $ brew help
    $ brew update         === download the newest version of homebrew from GitHub
    $ brew cleanup        === clean already install used downloaded

    $ brew install gcc

    ### To list all installed formulae, run.
    $ brew list

    ### You can uninstall a formula using following command.
    $ brew uninstall gcc

    ### You can search for packages using the following syntax.
    $ brew search    				#show all formulae
    OR
    $ brew search --desc <keyword>		#show a particular formulae

## brew tap: add more repositories

brew tap adds more repositories to the list of formulae that brew tracks, updates, and installs from. By default, tap assumes that the repositories come from GitHub, but the command isnâ€™t limited to any one location.

    $ brew tap
    domt4/crypto
    homebrew/core

    $ brew untap domt4/crypto

### Interesting Taps & Forks

A [tap](Taps.md) is Homebrew-speak for a Git repository containing extra formulae.
Homebrew has the capability to add (and remove) multiple taps to your local installation with the `brew tap` and `brew untap` commands. Type `man brew` in your terminal. The main repository at <https://github.com/Homebrew/homebrew-core>, often called `homebrew/core`, is always built-in.

Your taps are Git repositories located at `$(brew --repository)/Library/Taps`.

### Unsupported interesting taps
*   [varenc/ffmpeg](https://github.com/varenc/homebrew-ffmpeg): A tap for FFmpeg with additional options, including nonfree additions. 

*   [denji/nginx](https://github.com/denji/homebrew-nginx): A tap for NGINX modules, intended for its `nginx-full` formula which includes more module options.

*   [InstantClientTap/instantclient](https://github.com/InstantClientTap/homebrew-instantclient): A tap for Oracle Instant Client. The packages need to be downloaded manually.

*   [osx-cross/avr](https://github.com/osx-cross/homebrew-avr): GNU AVR toolchain (Libc, compilers and other tools for Atmel MCUs, useful for Arduino hackers and AVR programmers).

*   [petere/postgresql](https://github.com/petere/homebrew-postgresql): Allows installing multiple PostgreSQL versions in parallel.

*   [titanous/gnuradio](https://github.com/titanous/homebrew-gnuradio):  GNU Radio and friends running on macOS.

*   [dunn/emacs](https://github.com/dunn/homebrew-emacs): A tap for Emacs packages.

*   [sidaf/pentest](https://github.com/sidaf/homebrew-pentest): Tools for penetration testing.

*   [osrf/simulation](https://github.com/osrf/homebrew-simulation): Tools for robotics simulation.

*   [brewsci/bio](https://github.com/brewsci/homebrew-bio): Bioinformatics formulae.

*   [davidchall/hep](https://github.com/davidchall/homebrew-hep): High energy physics formulae.

*   [lifepillar/appleii](https://github.com/lifepillar/homebrew-appleii): Formulae for vintage Apple emulation.

### Unsupported interesting forks

*   [mistydemeo/tigerbrew](https://github.com/mistydemeo/tigerbrew): Experimental Tiger PowerPC version.

# troubleshoot

## fix compile error: install curl with TLS1.3 supported

When we want to install curl with TLS1.3,

    $ brew install DomT4/crypto/curl-max
Found there have compile error for nhttp2 lib

    ### disable nghttp
    $ brew edit DomT4/crypto/curl-max

Found there have compile error for libldap
    ### add --disable-ldap to curl's config
    $ brew edit DomT4/crypto/curl-max

    $ brew link --overwrite --dry-run curl-max

Check by:
      curl -kvvv https://www.tired.com --tlsv1.3
